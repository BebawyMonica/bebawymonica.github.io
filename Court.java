 /* CS 225 - Fundamentals of Computer Science
 * File Name: court.java
 * Java Programming
 * Project 4 - Due 03/20/2015
 * Instructor: Dan Grissom
 * 
 * Name 1: Monica Bebawy
 * Description: This file contains the source code for project 4.
 * Court class which takes in a Ball and outputs a "Court" 
 * image with the ball (according to the ball's instance
 * variables which describe it's position).
 */
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! //
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;


public class Court
{
	private final static String ext = "png";
	private final static String dir = "Output";
	private final static int width = 1000;
	private final static int height = 500;
	
	//////////////////////////////////////////////////////////
	// Draws the picture found at the fileNameWithExtension (e.g., myPic.jpg), at
	// the specified percentSize for picture scaling
	public static void DrawBallOnCourt(Ball b, String fileName)
	{
		// Create buffered image and Graphic2D object for court
		BufferedImage court; // image which will hold the court
		Graphics2D g2d; // "Court paint-brush"
		
		// Create an image of the appropriate height for facebook
		court = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);		
		g2d = (Graphics2D) court.getGraphics();

		// Fill the image with white
		g2d.setColor(Color.WHITE);
		g2d.fillRect(0,  0, width, width);

		// Set the color of the "stroke" (pen) to black
		g2d.setColor(Color.BLACK);
		
		// Create a new BufferedImage, which acts as a canvas
		BufferedImage imgBall = null;
		try {
			imgBall = ImageIO.read(new File(b.getBallImageName()));
		} catch (IOException e) { e.printStackTrace(); }
		
		// Resize image to percentage, save in ppResized
	    double w = b.getRadius()*2;  
	    double h = b.getRadius()*2; 
	    BufferedImage imgBallResized = new BufferedImage((int)w, (int)h, imgBall.getType());  
	    Graphics2D g = imgBallResized.createGraphics();  
	    g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
	    RenderingHints.VALUE_INTERPOLATION_BILINEAR);  
	    g.drawImage(imgBall, 0, 0, (int)w, (int)h, 0, 0, imgBall.getWidth(), imgBall.getHeight(), null);  
	    g.dispose();  
	    
	    // Convert the (0, 0) point from top-left to bottom-right
	    double x = b.getBallCenterX();
	    double y = height - b.getBallCenterY();

	    // Rotate the ball image around it's center
	    BufferedImage imgBallRot = new BufferedImage((int)w, (int)h, imgBall.getType()); 	    
	    AffineTransform trans = new AffineTransform();
	    Graphics2D gr = imgBallRot.createGraphics();
	    trans.rotate(Math.toRadians(b.getDegreesRotated()), w/2, h/2 );
	    gr.transform(trans);
	    gr.drawImage(imgBallResized, null, 0, 0);
	  
		// Draw the resized personal picture
		g2d.drawImage(imgBallRot, null, (int)(x - imgBallResized.getWidth()/2), (int)(y - imgBallResized.getHeight()/2));
		
		// Write the image to a file
		writeImageToFile(fileName, court);
	}
	
	//////////////////////////////////////////////////////////
	// Creates an image file (.jpg) on your machine containing
	// your FB banner
	public static void writeImageToFile(String fileName, BufferedImage court)
	{
		// Write the banner image to a file
		File f = new File(dir + "/" + fileName + "." + ext);		
		try {
			ImageIO.write(court, ext, f);
		} catch (IOException e) { System.err.println(e.getMessage()); }
	}
	
	//////////////////////////////////////////////////////////
	// Return the length of the court
	public static double getCourtLength()
	{
		return width;
	}
}
